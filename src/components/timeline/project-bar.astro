---
import type { ExperienceItem } from './types';

interface Props {
  year: number;
  experience: ExperienceItem;
}

const { experience, year } = Astro.props;
const { company, duration } = experience;

const getMonthsInYear = (year: number, start: Date, end: Date) => {
  const yearStart = new Date(year, 0, 1);
  const yearEnd = new Date(year, 11, 31);

  const effectiveStart = start < yearStart ? yearStart : start;
  const effectiveEnd = end > yearEnd ? yearEnd : end;

  return {
    start: effectiveStart.getMonth(),
    end: effectiveEnd.getMonth(),
    total: effectiveEnd.getMonth() - effectiveStart.getMonth() + 1
  };
};

const { start, total } = getMonthsInYear(year, duration.begin, duration.end || new Date);
const widthPercentage = (total / 12) * 100;
const startPercentage = (start / 12) * 100;

const { color } = company;
const showCompanyName = total > 2;
const showTitle = total > 4;
---

<div
  class="top-0 hover:brightness-110 hover:z-10 absolute rounded-lg h-11 transition-all cursor-pointer hover:scale-[1.02] project-bar"
  data-details={company.name}
  style={`
    left: ${startPercentage}%;
    width: ${widthPercentage}%;
    background-color: ${color.background || color.primary};
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.08) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.08) 50%, rgba(255, 255, 255, 0.08) 75%, transparent 75%, transparent);
    background-size: 10px 10px;
  `}
>
  <div class="absolute inset-0 flex justify-center items-center gap-2 px-3">
    <div class="bg-white/20 p-1.5 rounded-full">
      <img
        src={company.logo}
        alt={`${company.name} logo`}
        class="w-5 h-5"
        loading="lazy"
      />
    </div>
    {showCompanyName && showTitle && (
      <div class="flex flex-col">
        {showCompanyName && (
          <span
            class="font-medium text-sm truncate"
            style={`color: ${color.text || '#ffffff'}; text-shadow: 0 1px 2px rgba(0,0,0,0.1);`}
            title={company.name}
          >
            {company.name}
          </span>
        )}
        {showTitle && (
          <span
            class="font-medium text-xs truncate"
            style={`color: ${color.text || '#ffffff'}; text-shadow: 0 1px 2px rgba(0,0,0,0.1);`}
            title={experience.title}
          >
            {experience.title}
          </span>
        )}
      </div>
    )}
  </div>
</div>
