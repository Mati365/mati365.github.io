---
import { COMPANIES } from '~/data/experience';
import TimelineYear from './timeline-year.astro';
import ExpandableSection from '../shared/expandable-section.astro';

const oldestYear = Math.min(...COMPANIES.map(company => company.duration.begin.getFullYear()));
const years = Array.from(
  { length: 2025 - oldestYear + 1 },
  (_, i) => oldestYear + i
).toReversed();

const totalExperience = new Date().getFullYear() - oldestYear;
const getExperienceForYear = (year: number) =>
  COMPANIES.filter(({ duration }) => {
    const projectYear = duration.begin.getFullYear();
    const endYear = duration.end?.getFullYear() ?? new Date().getFullYear();

    return projectYear <= year && endYear >= year;
  });
---

<section class="mt-6 pt-4">
  <h2 class="mb-8 font-semibold text-2xl text-gray-900">
    ðŸ’¼ Experience
    <span class="font-normal text-base text-gray-500">({totalExperience}+ years)</span>
  </h2>

  <div class="mb-4 text-center text-gray-600 text-sm">
    Yearly capacity distribution across projects
  </div>

  <ExpandableSection maxHeight={500}>
    <table class="border-collapse [&_td]:border-gray-100 [&_td]:border-t w-full min-w-[320px]">
      <thead>
        <tr>
          <th class="border-gray-200 pr-3 md:pr-6 border-r w-14 md:w-20"></th>
          <th class="pl-2 md:pl-4 text-left">
            <div class="md:flex justify-between hidden pb-2 text-gray-500 text-xs">
              {[0, 25, 50, 75, 100].map(percent => (
                <span>{percent}%</span>
              ))}
            </div>
          </th>
        </tr>
      </thead>
      <tbody class="[&_tr]:align-top">
        {years.map((year, index) => (
          <TimelineYear
            year={year}
            experience={getExperienceForYear(year)}
          />
        ))}
      </tbody>
    </table>
  </ExpandableSection>
</section>
